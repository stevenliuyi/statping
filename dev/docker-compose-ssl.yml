version: '2.3'

services:

  nginx:
    container_name: nginx
    image: jwilder/nginx-proxy
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    networks:
      - internet
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./statping/nginx/certs:/etc/nginx/certs:ro
      - ./statping/nginx/vhost:/etc/nginx/vhost.d
      - ./statping/nginx/html:/usr/share/nginx/html:ro
      - ./statping/nginx/dhparam:/etc/nginx/dhparam
    environment:
      DEFAULT_HOST: ${LETSENCRYPT_HOST}

  letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    networks:
      - internet
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./statping/nginx/certs:/etc/nginx/certs
      - ./statping/nginx/vhost:/etc/nginx/vhost.d
      - ./statping/nginx/html:/usr/share/nginx/html
      - ./statping/nginx/dhparam:/etc/nginx/dhparam

  statping:
    container_name: statping
    image: stevenliuyi/statping:latest
    restart: always
    networks:
      - internet
      - database
    depends_on:
      - postgres
    volumes:
      - ./statping/app:/app
    environment:
      VIRTUAL_HOST: ${LETSENCRYPT_HOST}
      VIRTUAL_PORT: 8080
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      DB_CONN: postgres
      DB_HOST: postgres
      DB_USER: statping
      DB_PASS: password123
      DB_DATABASE: statping
      NAME: Statping SSL Instance
      DESCRIPTION: This Statping Status Page should be running ${LETSENCRYPT_HOST} with SSL.

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    networks:
      - database
    volumes:
      - ./statping/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: statping
      POSTGRES_DB: statping

  watchtower:
    image: v2tec/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 120 --cleanup

networks:
  internet:
    driver: bridge
  database:
    driver: bridge
